# Default config for Wayfire
#
# Copy this to ~/.config/wayfire.ini and edit it to your liking.
#
# Take the tutorial to get started.
# https://github.com/WayfireWM/wayfire/wiki/Tutorial
#
# Read the Configuration document for a complete reference.
# https://github.com/WayfireWM/wayfire/wiki/Configuration

# Input configuration ──────────────────────────────────────────────────────────

# Example configuration:
# 键盘与鼠标相关
[input]
xkb_layout = us                   # 键盘格式
# xkb_variant = dvorak,bepo       # 键盘变体，除了默认的qwer式的布局之外的其他，一般不需要配置
kb_numlock_default_state = true   # 键盘数字锁默认是否开启
mouse_accel_profile = adaptive    # 关于鼠标速度的配置方案，adaptive意为“适应”
cursor_theme = Adwaita            # 鼠标指针样式
cursor_size = 24                  # 鼠标指针大小，默认为24
# xkb_options = grp:win_space_toggle
#
# See Input options for a complete reference.
# https://github.com/WayfireWM/wayfire/wiki/Configuration#input

# Output configuration ─────────────────────────────────────────────────────────

# Example configuration:
# 配置显示输出
[output:eDP-1]
#屏幕输出分辨率，位置，方向，缩放等
mode = 1920x1080@60000
position = 0,0
transform = normal
scale = 1.000000
#
# You can get the names of your outputs with wlr-randr.
# 你可以通过wlr-randr来查看你的显示器名
# https://github.com/emersion/wlr-randr
#
# See also kanshi for configuring your outputs automatically.
# https://wayland.emersion.fr/kanshi/
#
# See Output options for a complete reference.
# https://github.com/WayfireWM/wayfire/wiki/Configuration#output

# Core options ─────────────────────────────────────────────────────────────────

[core]
# 核心选项与插件配置
# List of plugins to be enabled.
# See the Configuration document for a complete list.
plugins = \
  alpha \
  animate \
  autostart \
  blur \      # 毛玻璃效果，默认不开启
  command \
  cube \
  decoration \
  expo \
  fast-switcher \
  fisheye \
  foreign-toplevel \
  grid \
  gtk-shell \
  idle \
  invert \
  move \
  oswitch \
  place \
  resize \
  shortcuts-inhibit \
  switcher \
  vswitch \
  wayfire-shell \
  window-rules \
  wm-actions \
  wobbly \
  wrot \
  zoom \
  simple-tile       # 窗口平铺 , 默认没有

# Note: [blur] is not enabled by default, because it can be resource-intensive.
# Feel free to add it to the list if you want it.
# You can find its documentation here:
# https://github.com/WayfireWM/wayfire/wiki/Configuration#blur

[simple-tile]
# 设置平铺窗口间隔
outer_horiz_gap_size = 5
outer_vert_gap_size = 5

# [blur]
# method = box

# 桌面特效
[animate]
open_animation = fade     # 窗口打开特效,可选的还有zoom、fire、none
close_animation = fade    # 窗口关闭特效
duration = 200            # 持续时间

# 窗口装饰
[decoration]
title_height =  0                                 # 标题栏高度
active_color = 0.36862745 0.505882 0.67450 1      # 焦点窗口
inactive_color = 0.298039215 0.33725490196078434 0.41568627450980394 1


# Close focused window.
# 关闭窗口的快捷键
close_top_view = <super> KEY_C | <alt> KEY_F4

# Workspaces arranged into a grid: 3 × 3.
# 工作区间数量比例 , 就是super+E（默认）显示的workspaces数量
vwidth = 3
vheight = 3

# Prefer client-side decoration or server-side decoration
preferred_decoration_mode = server    # 首选窗口装饰，server去除了窗口标题栏，默认为client,

# Mouse bindings ───────────────────────────────────────────────────────────────

# Drag windows by holding down Super and left mouse button.
[move]
activate = <super> BTN_LEFT     # 窗口移动，super+左键 BTN_LEFT是鼠标左键

# Resize them with right mouse button + Super.
# 窗口大小，super+右键
[resize]
activate = <super> BTN_RIGHT

# Zoom in the desktop by scrolling + Super.
[zoom]
modifier = <super>              # 缩放(放大镜) super+滚轮
speed = 0.010000
smoothing_duration = 300

# Change opacity by scrolling with Super + Alt.
[alpha]
modifier = <super> <alt>        # 窗口透明度 super+alt+滚轮

# Rotate windows with the mouse.
[wrot]
activate = <super> <alt> BTN_RIGHT  # 窗口旋转 super+alt+右键

# Fisheye effect.
# 鱼眼
[fisheye]
toggle = <super> <ctrl> KEY_F

[idle]
# toggle = <super> KEY_L          
screensaver_timeout = 300       # 无活动300秒锁屏
dpms_timeout = 600              # 无活动600秒静如节能模式

# Startup commands ─────────────────────────────────────────────────────────────

# 自启动
[autostart]
# Automatically start background and panel.
# Set to false if you want to override the default clients.
autostart_wf_shell = true
# 将一些启动项都放到一个bash脚本中，减少配置文件的修改
default_option = fish ~/.config/wayfire/autostart.sh

# Set the wallpaper, start a panel and dock if you want one.
# https://github.com/WayfireWM/wf-shell
#
# These are started by the autostart_wf_shell option above.
#
# panel = wf-panel
# dock = wf-dock
# bar = waybar

# Output configuration
# https://wayland.emersion.fr/kanshi/
outputs = kanshi

# Notifications
# https://wayland.emersion.fr/mako/
# notifications = dunst

# Screen color temperature
# https://sr.ht/~kennylevinsen/wlsunset/
gamma = wlsunset

# Idle configuration
# https://github.com/swaywm/swayidle
# https://github.com/swaywm/swaylock
idle = swayidle -w timeout 900 'systemctl suspend' 
# idle = swayidle before-sleep systemctl suspend

# XDG desktop portal
# Needed by some GTK applications
portal = /usr/libexec/xdg-desktop-portal

# Example configuration:
#
# [idle]
# toggle = <super> KEY_Z
# screensaver_timeout = 300
# dpms_timeout = 600
#
# Disables the compositor going idle with Super + z.
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds.

# Applications ─────────────────────────────────────────────────────────────────

[command]

# Start a terminal
# https://github.com/alacritty/alacritty
binding_terminal = <super> KEY_T
command_terminal = alacritty

# 文件管理器
binding_file_manager = <super> KEY_E
command_file_manager = thunar

# 切换是否隐藏waybar
binding_waybar = <super> KEY_B
command_waybar = killall -s USR1 waybar

# Start your launcher
# https://hg.sr.ht/~scoopta/wofi
# Note: Add mode=run or mode=drun to ~/.config/wofi/config.
# You can also specify the mode with --show option.
binding_launcher = <super> KEY_R
command_launcher = wofi --show drun

# Screen locker
# https://github.com/swaywm/swaylock
# binding_lock = <super> <shift> KEY_ESC
# command_lock = swaylock

# Logout
# https://github.com/ArtsyMacaw/wlogout
binding_logout = <super> KEY_ESC
command_logout = wlogout -b 5

# 上下一首歌曲 和 暂停音乐
# alt+>
# alt+<
# alt+<space>
binding_mpc_up = <alt> KEY_COMMA
command_mpc_up = mpc prev
binding_mpc_down = <alt> KEY_DOT
command_mpc_down = mpc next
binding_mpc_stop = <alt> KEY_SPACE
command_mpc_stop = mpc toggle

# Screenshots 截图
# https://wayland.emersion.fr/grim/
# https://wayland.emersion.fr/slurp/
binding_screenshot_print = <super> <shift> KEY_A
command_screenshot_print = grim - | wl-copy
binding_screenshot_interactive = <super> KEY_A
# command_screenshot_interactive = slurp | grim -g - $(date '+%F_%T').png
command_screenshot_interactive = slurp | grim -g - - | wl-copy

# Volume controls 音量调整或暂停
# https://alsa-project.
# alt+[
# alt+]
# alt+shift+[
# alt+shift+]
# alt+\
binding_volume_up = <alt> KEY_LEFTBRACE
command_volume_up = pactl set-sink-volume @DEFAULT_SINK@ -5%
binding_volume_down = <alt> KEY_RIGHTBRACE
command_volume_down = pactl set-sink-volume @DEFAULT_SINK@ +5%
binding_volume_superup = <alt> <shift> KEY_LEFTBRACE
command_volume_superup = pactl set-sink-volume @DEFAULT_SINK@ -15%
binding_volume_superdown = <alt> <shift> KEY_RIGHTBRACE
command_volume_superdown = pactl set-sink-volume @DEFAULT_SINK@ +15%
binding_mute = <alt> KEY_BACKSLASH 
command_mute = pactl set-sink-mute @DEFAULT_SINK@ toggle

# Screen brightness 调整屏幕亮度
# <super>+[
# <shift>+]
# <shift>+\ 恢复默认亮度
# https://haikarainen.github.io/light/
binding_light_up = <super> KEY_LEFTBRACE
command_light_up = brightnessctl set 5%- > /dev/null
binding_light_down = <super> KEY_RIGHTBRACE
command_light_down = brightnessctl set 5%+ > /dev/null
binding_mute = <super> KEY_BACKSLASH
command_mute = brightnessctl set 80% > /dev/null

# Windows ──────────────────────────────────────────────────────────────────────

# Actions related to window management functionalities.
#
# Example configuration:
# 窗口管理器动作
[wm-actions]
toggle_fullscreen = <super> KEY_F     # 全屏窗口
toggle_always_on_top = <super> KEY_S    #始终置顶
toggle_sticky = <super> <shift> KEY_S   # 黏住，移动到其他工作空间时会带过去当前聚焦的窗口

# Position the windows in certain regions of the output.
# 调整窗口在屏幕的位置
[grid]
#
# ⇱ ↑ ⇲   │ 7 8 9
# ← f →   │ 4 5 6
# ⇱ ↓ ⇲ d │ 1 2 3 0
# ‾
slot_bl = <super> KEY_KP1
slot_b = <super> KEY_KP2
slot_br = <super> KEY_KP3
slot_l = <super> <alt> KEY_LEFT | <super> KEY_KP4
slot_c = <super> <alt> KEY_UP | <super> KEY_KP5
slot_r = <super>  <alt> KEY_RIGHT | <super> KEY_KP6
slot_tl = <super> KEY_KP7
slot_t = <super> KEY_KP8
slot_tr = <super> KEY_KP9
# Restore default. 恢复窗口位置
restore = <super>  <alt> KEY_DOWN | <super> KEY_KP0

# Change active window with an animation.
# 切换活动窗口
[switcher]
next_view = <alt> KEY_TAB
prev_view = <alt> <shift> KEY_TAB


# Simple active window switcher.
# 快速切换窗口
[fast-switcher]
activate = <alt> KEY_SPACE

# Switch to workspace.
# 切换工作空间
[vswitch]
binding_left = <ctrl> <super> KEY_LEFT
binding_down = <ctrl> <super> KEY_DOWN
binding_up = <ctrl> <super> KEY_UP
binding_right = <ctrl> <super> KEY_RIGHT

# Move the focused window with the same key-bindings, but add Shift.
# 携带当前窗口移动到工作空间
with_win_left = <ctrl> <super> <shift> KEY_LEFT
with_win_down = <ctrl> <super> <shift> KEY_DOWN
with_win_up = <ctrl> <super> <shift> KEY_UP
with_win_right = <ctrl> <super> <shift> KEY_RIGHT

# Show the current workspace row as a cube.
# 立方体显示所有工作区间（只显示有内容的工作空间）
[cube]
activate = <ctrl> <alt> BTN_LEFT
# Switch to the next or previous workspace.
# 快速切换到上一个或下一个工作空间
rotate_left = <super> <ctrl> KEY_A
rotate_right = <super> <ctrl> KEY_D

# Show an overview of all workspaces.
# 显示所有工作空间
[expo]
toggle = <super> KEY_G
# Select a workspace.
# Workspaces are arranged into a grid of 3 × 3.
# The numbering is left to right, line by line.
#
# ⇱ k ⇲
# h ⏎ l
# ⇱ j ⇲
# ‾   ‾
# See core.vwidth and core.vheight for configuring the grid.
# 直接跳转到指定的workspaces
[vswitch]
binding_1 = <super> KEY_1
binding_2 = <super> KEY_2
binding_3 = <super> KEY_3
binding_4 = <super> KEY_4
binding_5 = <super> KEY_5
binding_6 = <super> KEY_6
binding_7 = <super> KEY_7
binding_8 = <super> KEY_8
binding_9 = <super> KEY_9

# Outputs ──────────────────────────────────────────────────────────────────────

# Change focused output.
# 切换屏幕 ，如果有的花
[oswitch]
# Switch to the next output.
next_output = <super> KEY_Z
# Same with the window.
next_output_with_win = <super> <shift> KEY_Z

# Invert the colors of the whole output.
# 颜色翻转
[invert]
toggle = <super> KEY_I

# Send toggle menu event.
# [wayfire-shell]
# toggle_menu = <super>

# Rules ────────────────────────────────────────────────────────────────────────

# Example configuration:
#
[window-rules]
# maximize_alacritty = on created if app_id is "Alacritty" then maximize

# mini_screenkey = on created if app_id is "screenkey" then move 1000,200

#
# You can get the properties of your applications with the following command:
# $ WAYLAND_DEBUG=1 alacritty 2>&1 | kak
#
# See Window rules for a complete reference.
# https://github.com/WayfireWM/wayfire/wiki/Configuration#window-rules
